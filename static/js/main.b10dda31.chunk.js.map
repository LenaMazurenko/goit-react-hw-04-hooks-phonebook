{"version":3,"sources":["components/Section.styled.js","components/Section.js","components/FormContacts.styled.js","components/FormContacts.js","components/Filter.js","components/ContactsList.styled.js","components/ContactsList.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["Section","styled","section","Wrapper","children","Form","form","Label","label","SubmitBtn","button","FormContacts","onSubmitProp","useState","name","setName","number","setNumber","handleChange","event","target","value","reset","onSubmit","evt","preventDefault","type","placeholder","pattern","title","required","onChange","Filter","findeName","onFind","List","ul","Item","li","Btn","ContactsList","findeContact","onDelet","map","item","onClick","id","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","filter","setFilter","idList","nanoid","find","alert","prevState","e","toLowerCase","includes","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b10dda31.chunk.js","sourcesContent":["//import styled from '@emotion/styled/types/base';\r\nimport styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section`\r\n  width: 500px;\r\n  margin: 10px;\r\n  padding: 20px;\r\n  background-color: #ebdada;\r\n  box-shadow: 12px 8px 30px 2px rgba(106, 90, 90, 0.5);\r\n`;\r\n","import React from 'react';\r\nimport { Section } from './Section.styled';\r\n\r\nexport const Wrapper = ({ children }) => {\r\n  return <Section>{children}</Section>;\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  height: auto;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 2px solid darkgrey;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 200px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const SubmitBtn = styled.button`\r\n  width: 100px;\r\n  margin-bottom: 20px;\r\n  padding: 5px;\r\n`;\r\n","import { useState } from 'react';\r\nimport { Form, Label, SubmitBtn } from './FormContacts.styled';\r\n\r\nexport default function FormContacts({ onSubmitProp }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  //=================================\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  //=================================\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    // Проп который передается форме для вызова при сабмите\r\n    onSubmitProp(name, number);\r\n\r\n    reset();\r\n  };\r\n\r\n  //===========================================\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label>\r\n        <br />\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Vinny Pooch\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          placeholder=\"+380800-00-00\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </Label>\r\n\r\n      <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Filter = ({ findeName, onFind }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        name=\"find\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        value={findeName}\r\n        onChange={onFind}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  findeName: PropTypes.string,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n`;\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid #000;\r\n`;\r\nexport const Btn = styled.button`\r\n  display: block;\r\n  height: 30px;\r\n  width: 60px;\r\n  margin-left: 50px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, Item, Btn } from './ContactsList.styled';\r\n\r\nconst ContactsList = ({ findeContact, onDelet }) => {\r\n  return (\r\n    <List>\r\n      {findeContact.map(item => (\r\n        <Item key={item.id}>\r\n          <p>\r\n            &#9742; -- {item.name}- {item.number}\r\n          </p>\r\n          <Btn onClick={() => onDelet(item.id)}>Delet</Btn>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  findeContact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\nexport default ContactsList;\r\n","import { useState } from 'react';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport { nanoid } from 'nanoid';\nimport { Wrapper } from './components/Section';\nimport FormContacts from './components/FormContacts';\nimport { Filter } from './components/Filter';\nimport ContactsList from './components/ContactsList';\n\nexport default function App() {\n  const defaultList = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ];\n\n  const [contacts, setContacts] = useLocalStorage('contactsKey', defaultList);\n  const [filter, setFilter] = useState('');\n\n  // //===============================\n  const formSubmitHundler = (name, number) => {\n    const idList = nanoid();\n\n    if (contacts.find(item => item.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      setContacts(prevState => [\n        ...prevState,\n        {\n          id: idList,\n          name,\n          number,\n        },\n      ]);\n    }\n  };\n\n  const findeContact = () => {\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const deletHundler = id => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\n  };\n\n  return (\n    <Wrapper>\n      <h1>Phonebook </h1>\n      <FormContacts onSubmitProp={formSubmitHundler} />\n      <h2>Contacts</h2>\n      <Filter findeName={filter} onFind={e => setFilter(e.target.value)} />\n      <ContactsList findeContact={findeContact()} onDelet={deletHundler} />\n    </Wrapper>\n  );\n}\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}